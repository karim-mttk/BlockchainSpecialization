{
	"id": "70ff7137b486e0931a8be60f721f66a0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.9",
	"solcLongVersion": "0.5.9+commit.c68bc34e",
	"input": {
		"language": "Solidity",
		"sources": {
			"BallotBasic.sol": {
				"content": "pragma solidity ^0.5.9;\ncontract Ballot {\n\n    struct Voter {\n        uint weight;\n        bool voted;\n        uint8 vote;\n       // address delegate;\n    }\n    struct Proposal {\n        uint voteCount; // could add other data about proposal\n    }\n\n    address chairperson;\n    mapping(address => Voter) voters;\n    Proposal[] proposals;\n    \n\n    /// Create a new ballot with $(_numProposals) different proposals.\n    constructor(uint8 _numProposals) public {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 2;\n        proposals.length = _numProposals; \n    }\n\n    /// Give $(toVoter) the right to vote on this ballot.\n    /// May only be called by $(chairperson).\n    function register(address toVoter) public {\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\n        voters[toVoter].weight = 1;\n        voters[toVoter].voted = false;\n    }\n\n    /// Give a single vote to proposal $(toProposal).\n    function vote(uint8 toProposal) public {\n        Voter storage sender = voters[msg.sender];\n        if (sender.voted || toProposal >= proposals.length) return;\n        sender.voted = true;\n        sender.vote = toProposal;\n        proposals[toProposal].voteCount += sender.weight;\n    }\n\n    function winningProposal() public view returns (uint8 _winningProposal) {\n        uint256 winningVoteCount = 0;\n        for (uint8 prop = 0; prop < proposals.length; prop++)\n            if (proposals[prop].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[prop].voteCount;\n                _winningProposal = prop;\n            }\n    }\n}\n \n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BallotBasic.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BallotBasic.sol\":24:1603  contract Ballot {... */\n  mstore(0x40, 0x80)\n    /* \"BallotBasic.sol\":419:583  constructor(uint8 _numProposals) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"BallotBasic.sol\":419:583  constructor(uint8 _numProposals) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"BallotBasic.sol\":419:583  constructor(uint8 _numProposals) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"BallotBasic.sol\":483:493  msg.sender */\n  caller\n    /* \"BallotBasic.sol\":469:480  chairperson */\n  0x00\n  dup1\n    /* \"BallotBasic.sol\":469:493  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotBasic.sol\":532:533  2 */\n  0x02\n    /* \"BallotBasic.sol\":503:509  voters */\n  0x01\n    /* \"BallotBasic.sol\":503:522  voters[chairperson] */\n  0x00\n    /* \"BallotBasic.sol\":510:521  chairperson */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BallotBasic.sol\":503:522  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BallotBasic.sol\":503:529  voters[chairperson].weight */\n  0x00\n  add\n    /* \"BallotBasic.sol\":503:533  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotBasic.sol\":562:575  _numProposals */\n  dup1\n    /* \"BallotBasic.sol\":543:575  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"BallotBasic.sol\":543:552  proposals */\n  0x02\n    /* \"BallotBasic.sol\":543:575  proposals.length = _numProposals */\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"BallotBasic.sol\":419:583  constructor(uint8 _numProposals) public {... */\n  pop\n    /* \"BallotBasic.sol\":24:1603  contract Ballot {... */\n  jump(tag_7)\ntag_6:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup4\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\ntag_8:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_10:\n  tag_11\n  swap2\n  swap1\ntag_12:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_13\n  jumpi\n  0x00\n  dup1\n  dup3\n  add\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_12)\ntag_13:\n  pop\n  swap1\n  jump\ntag_11:\n  swap1\n  jump\t// out\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BallotBasic.sol\":24:1603  contract Ballot {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"BallotBasic.sol\":24:1603  contract Ballot {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4420e486\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BallotBasic.sol\":693:889  function register(address toVoter) public {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"BallotBasic.sol\":693:889  function register(address toVoter) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_8\n      jump\t// in\n    tag_6:\n      stop\n        /* \"BallotBasic.sol\":1241:1601  function winningProposal() public view returns (uint8 _winningProposal) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotBasic.sol\":949:1235  function vote(uint8 toProposal) public {... */\n    tag_5:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"BallotBasic.sol\":949:1235  function vote(uint8 toProposal) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n        /* \"BallotBasic.sol\":693:889  function register(address toVoter) public {... */\n    tag_8:\n        /* \"BallotBasic.sol\":763:774  chairperson */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotBasic.sol\":749:774  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotBasic.sol\":749:759  msg.sender */\n      caller\n        /* \"BallotBasic.sol\":749:774  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BallotBasic.sol\":749:799  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_15\n      jumpi\n      pop\n        /* \"BallotBasic.sol\":778:784  voters */\n      0x01\n        /* \"BallotBasic.sol\":778:793  voters[toVoter] */\n      0x00\n        /* \"BallotBasic.sol\":785:792  toVoter */\n      dup3\n        /* \"BallotBasic.sol\":778:793  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotBasic.sol\":778:799  voters[toVoter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotBasic.sol\":749:799  msg.sender != chairperson || voters[toVoter].voted */\n    tag_15:\n        /* \"BallotBasic.sol\":745:808  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_16\n      jumpi\n        /* \"BallotBasic.sol\":801:808  return; */\n      jump(tag_14)\n        /* \"BallotBasic.sol\":745:808  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_16:\n        /* \"BallotBasic.sol\":842:843  1 */\n      0x01\n        /* \"BallotBasic.sol\":817:823  voters */\n      dup1\n        /* \"BallotBasic.sol\":817:832  voters[toVoter] */\n      0x00\n        /* \"BallotBasic.sol\":824:831  toVoter */\n      dup4\n        /* \"BallotBasic.sol\":817:832  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotBasic.sol\":817:839  voters[toVoter].weight */\n      0x00\n      add\n        /* \"BallotBasic.sol\":817:843  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotBasic.sol\":877:882  false */\n      0x00\n        /* \"BallotBasic.sol\":853:859  voters */\n      0x01\n        /* \"BallotBasic.sol\":853:868  voters[toVoter] */\n      0x00\n        /* \"BallotBasic.sol\":860:867  toVoter */\n      dup4\n        /* \"BallotBasic.sol\":853:868  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotBasic.sol\":853:874  voters[toVoter].voted */\n      0x01\n      add\n      0x00\n        /* \"BallotBasic.sol\":853:882  voters[toVoter].voted = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotBasic.sol\":693:889  function register(address toVoter) public {... */\n    tag_14:\n      pop\n      jump\t// out\n        /* \"BallotBasic.sol\":1241:1601  function winningProposal() public view returns (uint8 _winningProposal) {... */\n    tag_10:\n        /* \"BallotBasic.sol\":1289:1311  uint8 _winningProposal */\n      0x00\n        /* \"BallotBasic.sol\":1323:1347  uint256 winningVoteCount */\n      dup1\n        /* \"BallotBasic.sol\":1350:1351  0 */\n      0x00\n        /* \"BallotBasic.sol\":1323:1351  uint256 winningVoteCount = 0 */\n      swap1\n      pop\n        /* \"BallotBasic.sol\":1366:1376  uint8 prop */\n      0x00\n        /* \"BallotBasic.sol\":1379:1380  0 */\n      dup1\n        /* \"BallotBasic.sol\":1366:1380  uint8 prop = 0 */\n      swap1\n      pop\n        /* \"BallotBasic.sol\":1361:1595  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n    tag_18:\n        /* \"BallotBasic.sol\":1389:1398  proposals */\n      0x02\n        /* \"BallotBasic.sol\":1389:1405  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotBasic.sol\":1382:1386  prop */\n      dup2\n        /* \"BallotBasic.sol\":1382:1405  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"BallotBasic.sol\":1361:1595  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n      iszero\n      tag_19\n      jumpi\n        /* \"BallotBasic.sol\":1459:1475  winningVoteCount */\n      dup2\n        /* \"BallotBasic.sol\":1431:1440  proposals */\n      0x02\n        /* \"BallotBasic.sol\":1441:1445  prop */\n      dup3\n        /* \"BallotBasic.sol\":1431:1446  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotBasic.sol\":1431:1456  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotBasic.sol\":1431:1475  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"BallotBasic.sol\":1427:1595  if (proposals[prop].voteCount > winningVoteCount) {... */\n      iszero\n      tag_23\n      jumpi\n        /* \"BallotBasic.sol\":1514:1523  proposals */\n      0x02\n        /* \"BallotBasic.sol\":1524:1528  prop */\n      dup2\n        /* \"BallotBasic.sol\":1514:1529  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotBasic.sol\":1514:1539  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotBasic.sol\":1495:1539  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"BallotBasic.sol\":1576:1580  prop */\n      dup1\n        /* \"BallotBasic.sol\":1557:1580  _winningProposal = prop */\n      swap3\n      pop\n        /* \"BallotBasic.sol\":1427:1595  if (proposals[prop].voteCount > winningVoteCount) {... */\n    tag_23:\n        /* \"BallotBasic.sol\":1407:1413  prop++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"BallotBasic.sol\":1361:1595  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n      jump(tag_18)\n    tag_19:\n      pop\n        /* \"BallotBasic.sol\":1241:1601  function winningProposal() public view returns (uint8 _winningProposal) {... */\n      pop\n      swap1\n      jump\t// out\n        /* \"BallotBasic.sol\":949:1235  function vote(uint8 toProposal) public {... */\n    tag_13:\n        /* \"BallotBasic.sol\":998:1018  Voter storage sender */\n      0x00\n        /* \"BallotBasic.sol\":1021:1027  voters */\n      0x01\n        /* \"BallotBasic.sol\":1021:1039  voters[msg.sender] */\n      0x00\n        /* \"BallotBasic.sol\":1028:1038  msg.sender */\n      caller\n        /* \"BallotBasic.sol\":1021:1039  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotBasic.sol\":998:1039  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"BallotBasic.sol\":1053:1059  sender */\n      dup1\n        /* \"BallotBasic.sol\":1053:1065  sender.voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotBasic.sol\":1053:1099  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_27\n      jumpi\n      pop\n        /* \"BallotBasic.sol\":1083:1092  proposals */\n      0x02\n        /* \"BallotBasic.sol\":1083:1099  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotBasic.sol\":1069:1079  toProposal */\n      dup3\n        /* \"BallotBasic.sol\":1069:1099  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"BallotBasic.sol\":1053:1099  sender.voted || toProposal >= proposals.length */\n    tag_27:\n        /* \"BallotBasic.sol\":1049:1108  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_28\n      jumpi\n        /* \"BallotBasic.sol\":1101:1108  return; */\n      pop\n      jump(tag_26)\n        /* \"BallotBasic.sol\":1049:1108  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_28:\n        /* \"BallotBasic.sol\":1132:1136  true */\n      0x01\n        /* \"BallotBasic.sol\":1117:1123  sender */\n      dup2\n        /* \"BallotBasic.sol\":1117:1129  sender.voted */\n      0x01\n      add\n      0x00\n        /* \"BallotBasic.sol\":1117:1136  sender.voted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotBasic.sol\":1160:1170  toProposal */\n      dup2\n        /* \"BallotBasic.sol\":1146:1152  sender */\n      dup2\n        /* \"BallotBasic.sol\":1146:1157  sender.vote */\n      0x01\n      add\n      0x01\n        /* \"BallotBasic.sol\":1146:1170  sender.vote = toProposal */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotBasic.sol\":1215:1221  sender */\n      dup1\n        /* \"BallotBasic.sol\":1215:1228  sender.weight */\n      0x00\n      add\n      sload\n        /* \"BallotBasic.sol\":1180:1189  proposals */\n      0x02\n        /* \"BallotBasic.sol\":1190:1200  toProposal */\n      dup4\n        /* \"BallotBasic.sol\":1180:1201  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotBasic.sol\":1180:1211  proposals[toProposal].voteCount */\n      0x00\n      add\n      0x00\n        /* \"BallotBasic.sol\":1180:1228  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotBasic.sol\":949:1235  function vote(uint8 toProposal) public {... */\n      pop\n    tag_26:\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72305820b51752926c2b342518e18d06aaa7ff782ca1e357f78f6c1c9e3d5898894c3df664736f6c63430005090032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161052c38038061052c8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816100fe9190610105565b5050610158565b81548183558181111561012c5781836000526020600020918201910161012b9190610131565b5b505050565b61015591905b808211156101515760008082016000905550600101610137565b5090565b90565b6103c5806101676000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634420e48614610046578063609ff1bd1461008a578063b3f98adc146100ae575b600080fd5b6100886004803603602081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100df565b005b610092610237565b604051808260ff1660ff16815260200191505060405180910390f35b6100dd600480360360208110156100c457600080fd5b81019080803560ff1690602001909291905050506102af565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101875750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561019157610234565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b50565b6000806000905060008090505b6002805490508160ff1610156102aa578160028260ff168154811061026557fe5b9060005260206000200160000154111561029d5760028160ff168154811061028957fe5b906000526020600020016000015491508092505b8080600101915050610244565b505090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061031757506002805490508260ff1610155b15610322575061038d565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff168154811061037157fe5b9060005260206000200160000160008282540192505081905550505b5056fea265627a7a72305820b51752926c2b342518e18d06aaa7ff782ca1e357f78f6c1c9e3d5898894c3df664736f6c63430005090032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x52C CODESIZE SUB DUP1 PUSH2 0x52C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0x105 JUMP JUMPDEST POP POP PUSH2 0x158 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x12C JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x131 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x155 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x137 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3C5 DUP1 PUSH2 0x167 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xAE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2AF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x187 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x191 JUMPI PUSH2 0x234 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2AA JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x265 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x29D JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x289 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x244 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x317 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x322 JUMPI POP PUSH2 0x38D JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x371 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xb5 OR MSTORE SWAP3 PUSH13 0x2B342518E18D06AAA7FF782CA1 0xe3 JUMPI 0xf7 DUP16 PUSH13 0x1C9E3D5898894C3DF664736F6C PUSH4 0x43000509 STOP ORIGIN ",
							"sourceMap": "24:1579:0:-;;;419:164;8:9:-1;5:2;;;30:1;27;20:12;5:2;419:164:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;419:164:0;;;;;;;;;;;;;;;;483:10;469:11;;:24;;;;;;;;;;;;;;;;;;532:1;503:6;:19;510:11;;;;;;;;;;;503:19;;;;;;;;;;;;;;;:26;;:30;;;;562:13;543:32;;:9;:32;;;;;:::i;:::-;;419:164;24:1579;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80634420e48614610046578063609ff1bd1461008a578063b3f98adc146100ae575b600080fd5b6100886004803603602081101561005c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100df565b005b610092610237565b604051808260ff1660ff16815260200191505060405180910390f35b6100dd600480360360208110156100c457600080fd5b81019080803560ff1690602001909291905050506102af565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101875750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561019157610234565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b50565b6000806000905060008090505b6002805490508160ff1610156102aa578160028260ff168154811061026557fe5b9060005260206000200160000154111561029d5760028160ff168154811061028957fe5b906000526020600020016000015491508092505b8080600101915050610244565b505090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061031757506002805490508260ff1610155b15610322575061038d565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff168154811061037157fe5b9060005260206000200160000160008282540192505081905550505b5056fea265627a7a72305820b51752926c2b342518e18d06aaa7ff782ca1e357f78f6c1c9e3d5898894c3df664736f6c63430005090032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xAE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2AF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x187 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x191 JUMPI PUSH2 0x234 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2AA JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x265 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x29D JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x289 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x244 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x317 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x322 JUMPI POP PUSH2 0x38D JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x371 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xb5 OR MSTORE SWAP3 PUSH13 0x2B342518E18D06AAA7FF782CA1 0xe3 JUMPI 0xf7 DUP16 PUSH13 0x1C9E3D5898894C3DF664736F6C PUSH4 0x43000509 STOP ORIGIN ",
							"sourceMap": "24:1579:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24:1579:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;693:196;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;693:196:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1241:360;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;949:286;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;949:286:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;693:196;763:11;;;;;;;;;;;749:25;;:10;:25;;;;:50;;;;778:6;:15;785:7;778:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;749:50;745:63;;;801:7;;745:63;842:1;817:6;:15;824:7;817:15;;;;;;;;;;;;;;;:22;;:26;;;;877:5;853:6;:15;860:7;853:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;693:196;;:::o;1241:360::-;1289:22;1323:24;1350:1;1323:28;;1366:10;1379:1;1366:14;;1361:234;1389:9;:16;;;;1382:4;:23;;;1361:234;;;1459:16;1431:9;1441:4;1431:15;;;;;;;;;;;;;;;;;:25;;;:44;1427:168;;;1514:9;1524:4;1514:15;;;;;;;;;;;;;;;;;:25;;;1495:44;;1576:4;1557:23;;1427:168;1407:6;;;;;;;1361:234;;;;1241:360;;:::o;949:286::-;998:20;1021:6;:18;1028:10;1021:18;;;;;;;;;;;;;;;998:41;;1053:6;:12;;;;;;;;;;;;:46;;;;1083:9;:16;;;;1069:10;:30;;;;1053:46;1049:59;;;1101:7;;;1049:59;1132:4;1117:6;:12;;;:19;;;;;;;;;;;;;;;;;;1160:10;1146:6;:11;;;:24;;;;;;;;;;;;;;;;;;1215:6;:13;;;1180:9;1190:10;1180:21;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;949:286;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "193000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "41316",
								"vote(uint8)": "62193",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "MSTORE"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "POP"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "MLOAD"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "PUSHSIZE"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "CODESIZE"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "SUB"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "DUP1"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "PUSHSIZE"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "DUP4"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "CODECOPY"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "DUP2"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "DUP2"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "ADD"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "DUP2"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "ADD"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "SWAP1"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "DUP1"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "DUP1"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "MLOAD"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "SWAP1"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "ADD"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "SWAP1"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "SWAP3"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "SWAP2"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "SWAP1"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "POP"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "POP"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "POP"
								},
								{
									"begin": 483,
									"end": 493,
									"name": "CALLER"
								},
								{
									"begin": 469,
									"end": 480,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 469,
									"end": 480,
									"name": "DUP1"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "EXP"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "DUP2"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "SLOAD"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "DUP2"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "MUL"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "NOT"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "AND"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "SWAP1"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "DUP4"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "AND"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "MUL"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "OR"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "SWAP1"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "SSTORE"
								},
								{
									"begin": 469,
									"end": 493,
									"name": "POP"
								},
								{
									"begin": 532,
									"end": 533,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 503,
									"end": 509,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "DUP1"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "SWAP1"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "SLOAD"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "SWAP1"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "EXP"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "SWAP1"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "DIV"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 510,
									"end": 521,
									"name": "AND"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "AND"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "AND"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "DUP2"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "MSTORE"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "DUP2"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "MSTORE"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 503,
									"end": 522,
									"name": "KECCAK256"
								},
								{
									"begin": 503,
									"end": 529,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 503,
									"end": 529,
									"name": "ADD"
								},
								{
									"begin": 503,
									"end": 533,
									"name": "DUP2"
								},
								{
									"begin": 503,
									"end": 533,
									"name": "SWAP1"
								},
								{
									"begin": 503,
									"end": 533,
									"name": "SSTORE"
								},
								{
									"begin": 503,
									"end": 533,
									"name": "POP"
								},
								{
									"begin": 562,
									"end": 575,
									"name": "DUP1"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "AND"
								},
								{
									"begin": 543,
									"end": 552,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "DUP2"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "SWAP2"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "SWAP1"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "JUMPDEST"
								},
								{
									"begin": 543,
									"end": 575,
									"name": "POP"
								},
								{
									"begin": 419,
									"end": 583,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMP"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP2"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SLOAD"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP2"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP4"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SSTORE"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP2"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP2"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "GT"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "ISZERO"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMPI"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP2"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP4"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "MSTORE"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "KECCAK256"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SWAP2"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP3"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "ADD"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SWAP2"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "ADD"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SWAP2"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SWAP1"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SWAP2"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SWAP1"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP3"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "GT"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "ISZERO"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMPI"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP3"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "ADD"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SWAP1"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SSTORE"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "ADD"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMP"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SWAP1"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMP"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "SWAP1"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "CODECOPY"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 1603,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72305820b51752926c2b342518e18d06aaa7ff782ca1e357f78f6c1c9e3d5898894c3df664736f6c63430005090032",
									".code": [
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "MSTORE"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "POP"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "LT"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "SHR"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1603,
											"name": "REVERT"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "DUP1"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "DUP2"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "ADD"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "SWAP1"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "DUP1"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "DUP1"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "AND"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "SWAP1"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "ADD"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "SWAP1"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "SWAP3"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "SWAP2"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "SWAP1"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "STOP"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "JUMPDEST"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "JUMPDEST"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "MLOAD"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "DUP1"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "DUP3"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "AND"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "AND"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "DUP2"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "MSTORE"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "ADD"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "SWAP2"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "MLOAD"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "DUP1"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "SWAP2"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "SUB"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "SWAP1"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "RETURN"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "DUP2"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "DUP1"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "AND"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "ADD"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "SWAP3"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "SWAP2"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "STOP"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "DUP1"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "SLOAD"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "EXP"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "DIV"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "AND"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "AND"
										},
										{
											"begin": 749,
											"end": 759,
											"name": "CALLER"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "AND"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "EQ"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "ISZERO"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "DUP1"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "JUMPI"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "POP"
										},
										{
											"begin": 778,
											"end": 784,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 785,
											"end": 792,
											"name": "DUP3"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "ADD"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "ADD"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "KECCAK256"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "ADD"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "SLOAD"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "EXP"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "DIV"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "AND"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "JUMPDEST"
										},
										{
											"begin": 745,
											"end": 808,
											"name": "ISZERO"
										},
										{
											"begin": 745,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 745,
											"end": 808,
											"name": "JUMPI"
										},
										{
											"begin": 801,
											"end": 808,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 801,
											"end": 808,
											"name": "JUMP"
										},
										{
											"begin": 745,
											"end": 808,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 745,
											"end": 808,
											"name": "JUMPDEST"
										},
										{
											"begin": 842,
											"end": 843,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 817,
											"end": 823,
											"name": "DUP1"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 824,
											"end": 831,
											"name": "DUP4"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "AND"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "DUP2"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "MSTORE"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "ADD"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "SWAP1"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "DUP2"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "MSTORE"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "ADD"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 817,
											"end": 832,
											"name": "KECCAK256"
										},
										{
											"begin": 817,
											"end": 839,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 817,
											"end": 839,
											"name": "ADD"
										},
										{
											"begin": 817,
											"end": 843,
											"name": "DUP2"
										},
										{
											"begin": 817,
											"end": 843,
											"name": "SWAP1"
										},
										{
											"begin": 817,
											"end": 843,
											"name": "SSTORE"
										},
										{
											"begin": 817,
											"end": 843,
											"name": "POP"
										},
										{
											"begin": 877,
											"end": 882,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 853,
											"end": 859,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 860,
											"end": 867,
											"name": "DUP4"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "AND"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "AND"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "DUP2"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "MSTORE"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "ADD"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "SWAP1"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "DUP2"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "MSTORE"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "ADD"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "KECCAK256"
										},
										{
											"begin": 853,
											"end": 874,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 853,
											"end": 874,
											"name": "ADD"
										},
										{
											"begin": 853,
											"end": 874,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "EXP"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "DUP2"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "SLOAD"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "DUP2"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "MUL"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "NOT"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "AND"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "SWAP1"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "DUP4"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "ISZERO"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "ISZERO"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "MUL"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "OR"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "SWAP1"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "SSTORE"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "POP"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "JUMPDEST"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "POP"
										},
										{
											"begin": 693,
											"end": 889,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "JUMPDEST"
										},
										{
											"begin": 1289,
											"end": 1311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1347,
											"name": "DUP1"
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1351,
											"name": "SWAP1"
										},
										{
											"begin": 1323,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1366,
											"end": 1376,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "DUP1"
										},
										{
											"begin": 1366,
											"end": 1380,
											"name": "SWAP1"
										},
										{
											"begin": 1366,
											"end": 1380,
											"name": "POP"
										},
										{
											"begin": 1361,
											"end": 1595,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1361,
											"end": 1595,
											"name": "JUMPDEST"
										},
										{
											"begin": 1389,
											"end": 1398,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1389,
											"end": 1405,
											"name": "DUP1"
										},
										{
											"begin": 1389,
											"end": 1405,
											"name": "SLOAD"
										},
										{
											"begin": 1389,
											"end": 1405,
											"name": "SWAP1"
										},
										{
											"begin": 1389,
											"end": 1405,
											"name": "POP"
										},
										{
											"begin": 1382,
											"end": 1386,
											"name": "DUP2"
										},
										{
											"begin": 1382,
											"end": 1405,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1382,
											"end": 1405,
											"name": "AND"
										},
										{
											"begin": 1382,
											"end": 1405,
											"name": "LT"
										},
										{
											"begin": 1361,
											"end": 1595,
											"name": "ISZERO"
										},
										{
											"begin": 1361,
											"end": 1595,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1361,
											"end": 1595,
											"name": "JUMPI"
										},
										{
											"begin": 1459,
											"end": 1475,
											"name": "DUP2"
										},
										{
											"begin": 1431,
											"end": 1440,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1441,
											"end": 1445,
											"name": "DUP3"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "AND"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "SLOAD"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "LT"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "JUMPI"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "INVALID"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "JUMPDEST"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "MSTORE"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "KECCAK256"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "ADD"
										},
										{
											"begin": 1431,
											"end": 1456,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1456,
											"name": "ADD"
										},
										{
											"begin": 1431,
											"end": 1456,
											"name": "SLOAD"
										},
										{
											"begin": 1431,
											"end": 1475,
											"name": "GT"
										},
										{
											"begin": 1427,
											"end": 1595,
											"name": "ISZERO"
										},
										{
											"begin": 1427,
											"end": 1595,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1427,
											"end": 1595,
											"name": "JUMPI"
										},
										{
											"begin": 1514,
											"end": 1523,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1524,
											"end": 1528,
											"name": "DUP2"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "AND"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "DUP2"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "SLOAD"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "DUP2"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "LT"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "JUMPI"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "INVALID"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "JUMPDEST"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "SWAP1"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "MSTORE"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "KECCAK256"
										},
										{
											"begin": 1514,
											"end": 1529,
											"name": "ADD"
										},
										{
											"begin": 1514,
											"end": 1539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1539,
											"name": "ADD"
										},
										{
											"begin": 1514,
											"end": 1539,
											"name": "SLOAD"
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "SWAP2"
										},
										{
											"begin": 1495,
											"end": 1539,
											"name": "POP"
										},
										{
											"begin": 1576,
											"end": 1580,
											"name": "DUP1"
										},
										{
											"begin": 1557,
											"end": 1580,
											"name": "SWAP3"
										},
										{
											"begin": 1557,
											"end": 1580,
											"name": "POP"
										},
										{
											"begin": 1427,
											"end": 1595,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1427,
											"end": 1595,
											"name": "JUMPDEST"
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "DUP1"
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "ADD"
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "SWAP2"
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "POP"
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "POP"
										},
										{
											"begin": 1361,
											"end": 1595,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1361,
											"end": 1595,
											"name": "JUMP"
										},
										{
											"begin": 1361,
											"end": 1595,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1361,
											"end": 1595,
											"name": "JUMPDEST"
										},
										{
											"begin": 1361,
											"end": 1595,
											"name": "POP"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "POP"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "SWAP1"
										},
										{
											"begin": 1241,
											"end": 1601,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "JUMPDEST"
										},
										{
											"begin": 998,
											"end": 1018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1027,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1038,
											"name": "CALLER"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "AND"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "AND"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "DUP2"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "MSTORE"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "ADD"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "SWAP1"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "DUP2"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "MSTORE"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "ADD"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1039,
											"name": "KECCAK256"
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "SWAP1"
										},
										{
											"begin": 998,
											"end": 1039,
											"name": "POP"
										},
										{
											"begin": 1053,
											"end": 1059,
											"name": "DUP1"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "ADD"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "SWAP1"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "SLOAD"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "SWAP1"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "EXP"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "SWAP1"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "DIV"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1053,
											"end": 1065,
											"name": "AND"
										},
										{
											"begin": 1053,
											"end": 1099,
											"name": "DUP1"
										},
										{
											"begin": 1053,
											"end": 1099,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1053,
											"end": 1099,
											"name": "JUMPI"
										},
										{
											"begin": 1053,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 1083,
											"end": 1092,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1083,
											"end": 1099,
											"name": "DUP1"
										},
										{
											"begin": 1083,
											"end": 1099,
											"name": "SLOAD"
										},
										{
											"begin": 1083,
											"end": 1099,
											"name": "SWAP1"
										},
										{
											"begin": 1083,
											"end": 1099,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1079,
											"name": "DUP3"
										},
										{
											"begin": 1069,
											"end": 1099,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1069,
											"end": 1099,
											"name": "AND"
										},
										{
											"begin": 1069,
											"end": 1099,
											"name": "LT"
										},
										{
											"begin": 1069,
											"end": 1099,
											"name": "ISZERO"
										},
										{
											"begin": 1053,
											"end": 1099,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1053,
											"end": 1099,
											"name": "JUMPDEST"
										},
										{
											"begin": 1049,
											"end": 1108,
											"name": "ISZERO"
										},
										{
											"begin": 1049,
											"end": 1108,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1049,
											"end": 1108,
											"name": "JUMPI"
										},
										{
											"begin": 1101,
											"end": 1108,
											"name": "POP"
										},
										{
											"begin": 1101,
											"end": 1108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1101,
											"end": 1108,
											"name": "JUMP"
										},
										{
											"begin": 1049,
											"end": 1108,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1049,
											"end": 1108,
											"name": "JUMPDEST"
										},
										{
											"begin": 1132,
											"end": 1136,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1117,
											"end": 1123,
											"name": "DUP2"
										},
										{
											"begin": 1117,
											"end": 1129,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1117,
											"end": 1129,
											"name": "ADD"
										},
										{
											"begin": 1117,
											"end": 1129,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "EXP"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "DUP2"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "SLOAD"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "DUP2"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "MUL"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "NOT"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "AND"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "SWAP1"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "DUP4"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "ISZERO"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "ISZERO"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "MUL"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "OR"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "SWAP1"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "SSTORE"
										},
										{
											"begin": 1117,
											"end": 1136,
											"name": "POP"
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 1146,
											"end": 1152,
											"name": "DUP2"
										},
										{
											"begin": 1146,
											"end": 1157,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1146,
											"end": 1157,
											"name": "ADD"
										},
										{
											"begin": 1146,
											"end": 1157,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "EXP"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "SLOAD"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "MUL"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "NOT"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "AND"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "DUP4"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "AND"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "MUL"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "OR"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "SSTORE"
										},
										{
											"begin": 1146,
											"end": 1170,
											"name": "POP"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP1"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "ADD"
										},
										{
											"begin": 1215,
											"end": 1228,
											"name": "SLOAD"
										},
										{
											"begin": 1180,
											"end": 1189,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1190,
											"end": 1200,
											"name": "DUP4"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "AND"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP2"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "SLOAD"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "DUP2"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "LT"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "JUMPI"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "INVALID"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "JUMPDEST"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "SWAP1"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "MSTORE"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "KECCAK256"
										},
										{
											"begin": 1180,
											"end": 1201,
											"name": "ADD"
										},
										{
											"begin": 1180,
											"end": 1211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1211,
											"name": "ADD"
										},
										{
											"begin": 1180,
											"end": 1211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "DUP3"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "DUP3"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "SLOAD"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "ADD"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "SWAP3"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "POP"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "POP"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "DUP2"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "SWAP1"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "SSTORE"
										},
										{
											"begin": 1180,
											"end": 1228,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "JUMPDEST"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "POP"
										},
										{
											"begin": 949,
											"end": 1235,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.c68bc34e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"constructor\":\"Create a new ballot with $(_numProposals) different proposals.\",\"register(address)\":{\"notice\":\"Give $(toVoter) the right to vote on this ballot. May only be called by $(chairperson).\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\"}}}},\"settings\":{\"compilationTarget\":{\"BallotBasic.sol\":\"Ballot\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BallotBasic.sol\":{\"keccak256\":\"0xc814e16e57ffb9e8eb0caa0bf7b7e3be64eaf73c44498b6d61d2d2bdf311de70\",\"urls\":[\"bzzr://a7f33d6fce1d57fbaa596af21b14454118ae3b50a474e20644f83ff15e95e089\",\"dweb:/ipfs/QmW3E5wZ8QFCPVVzCohVkEMNuLcwG9qGPjCwiJLgn6WXaq\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"constructor": "Create a new ballot with $(_numProposals) different proposals.",
							"register(address)": {
								"notice": "Give $(toVoter) the right to vote on this ballot. May only be called by $(chairperson)."
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal)."
							}
						}
					}
				}
			}
		},
		"sources": {
			"BallotBasic.sol": {
				"ast": {
					"absolutePath": "BallotBasic.sol",
					"exportedSymbols": {
						"Ballot": [
							159
						]
					},
					"id": 160,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 159,
							"linearizedBaseContracts": [
								159
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "70:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "70:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "91:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "91:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "111:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "111:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 159,
									"src": "47:109:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "187:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "187:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 159,
									"src": "161:86:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "253:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "253:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "278:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "286:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "278:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 15,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "297:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 159,
									"src": "316:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 18,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "316:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 19,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "316:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "459:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "469:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "483:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "483:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "469:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "469:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "503:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 32,
															"indexExpression": {
																"argumentTypes": null,
																"id": 31,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "510:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "503:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "503:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "532:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "503:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "503:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "543:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "543:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 40,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "562:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "543:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "543:32:0"
											}
										]
									},
									"documentation": "Create a new ballot with $(_numProposals) different proposals.",
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "431:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 21,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "430:21:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:0:0"
									},
									"scope": 159,
									"src": "419:164:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "735:154:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 49,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "749:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "749:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 51,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "763:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "749:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "778:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 55,
															"indexExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "785:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "778:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "778:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "749:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 59,
												"nodeType": "IfStatement",
												"src": "745:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 48,
													"id": 58,
													"nodeType": "Return",
													"src": "801:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 60,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "817:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 62,
															"indexExpression": {
																"argumentTypes": null,
																"id": 61,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "824:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "817:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "817:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "842:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "817:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "817:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 67,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "853:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 69,
															"indexExpression": {
																"argumentTypes": null,
																"id": 68,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "860:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "853:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "853:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "877:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "853:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "853:29:0"
											}
										]
									},
									"documentation": "Give $(toVoter) the right to vote on this ballot.\n May only be called by $(chairperson).",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "711:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "710:17:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "735:0:0"
									},
									"scope": 159,
									"src": "693:196:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "988:247:0",
										"statements": [
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 116,
														"src": "998:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 80,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "998:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1021:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 85,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 83,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "1028:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1028:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1021:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "998:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 87,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1053:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1053:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 89,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1069:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 90,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1083:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1083:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1069:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1053:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 95,
												"nodeType": "IfStatement",
												"src": "1049:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 79,
													"id": 94,
													"nodeType": "Return",
													"src": "1101:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 96,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1117:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1117:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1132:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1117:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1117:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 102,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1146:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1146:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 105,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1160:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1146:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1146:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1180:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 110,
															"indexExpression": {
																"argumentTypes": null,
																"id": 109,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1190:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1180:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1180:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 112,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1215:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1215:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1180:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1180:48:0"
											}
										]
									},
									"documentation": "Give a single vote to proposal $(toProposal).",
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "963:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 76,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "963:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "962:18:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:0"
									},
									"scope": 159,
									"src": "949:286:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1313:288:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "1323:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 125,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1350:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1323:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 137,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1431:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 139,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 138,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "1441:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1431:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1431:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 141,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1459:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1431:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 155,
													"nodeType": "IfStatement",
													"src": "1427:168:0",
													"trueBody": {
														"id": 154,
														"nodeType": "Block",
														"src": "1477:118:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 143,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1495:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 144,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "1514:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 146,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 145,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 127,
																				"src": "1524:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1514:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 147,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "1514:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1495:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 149,
																"nodeType": "ExpressionStatement",
																"src": "1495:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 150,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 120,
																		"src": "1557:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 151,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 127,
																		"src": "1576:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1557:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 153,
																"nodeType": "ExpressionStatement",
																"src": "1557:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "1382:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 131,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1389:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1389:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1382:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 156,
												"initializationExpression": {
													"assignments": [
														127
													],
													"declarations": [
														{
															"constant": false,
															"id": 127,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 156,
															"src": "1366:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 126,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1366:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 129,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1379:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1366:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1407:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 134,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "1407:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 136,
													"nodeType": "ExpressionStatement",
													"src": "1407:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1361:234:0"
											}
										]
									},
									"documentation": null,
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1265:2:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1289:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 119,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1289:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1288:24:0"
									},
									"scope": 159,
									"src": "1241:360:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 160,
							"src": "24:1579:0"
						}
					],
					"src": "0:1606:0"
				},
				"id": 0
			}
		}
	}
}