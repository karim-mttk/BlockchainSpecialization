{
	"id": "66db7ce8195b2b0adf4f98358799d515",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.9",
	"solcLongVersion": "0.5.9+commit.c68bc34e",
	"input": {
		"language": "Solidity",
		"sources": {
			"BallotWithStages.sol": {
				"content": "pragma solidity ^0.5.9;\ncontract Ballot {\n\n    struct Voter {\n        uint weight;\n        bool voted;\n        uint8 vote;\n    }\n    struct Proposal {\n        uint voteCount;\n    }\n    enum Stage {Init,Reg, Vote, Done}\n    Stage public stage = Stage.Init;\n    \n    address chairperson;\n    mapping(address => Voter) voters;\n    Proposal[] proposals;\n\n    \n    uint startTime;   \n\n    /// Create a new ballot with $(_numProposals) different proposals.\n    constructor(uint8 _numProposals) public {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 2; // weight is 2 for testing purposes\n        proposals.length = _numProposals;\n        stage = Stage.Reg;\n        startTime = now;\n    }\n\n    /// Give $(toVoter) the right to vote on this ballot.\n    /// May only be called by $(chairperson).\n    function register(address toVoter) public {\n        if (stage != Stage.Reg) {return;}\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\n        voters[toVoter].weight = 1;\n        voters[toVoter].voted = false;\n        if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;}        \n    }\n\n    /// Give a single vote to proposal $(toProposal).\n    function vote(uint8 toProposal) public {\n        if (stage != Stage.Vote) {return;}\n        Voter storage sender = voters[msg.sender];\n        if (sender.voted || toProposal >= proposals.length) return;\n        sender.voted = true;\n        sender.vote = toProposal;   \n        proposals[toProposal].voteCount += sender.weight;\n        if (now > (startTime+ 10 seconds)) {stage = Stage.Done;}        \n        \n    }\n\n    function winningProposal() public view returns (uint8 _winningProposal) {\n        if (stage != Stage.Done) {return _winningProposal;}\n        uint256 winningVoteCount = 0;\n        for (uint8 prop = 0; prop < proposals.length; prop++)\n            if (proposals[prop].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[prop].voteCount;\n                _winningProposal = prop;\n            }\n       \n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"BallotWithStages.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BallotWithStages.sol\":24:2054  contract Ballot {... */\n  mstore(0x40, 0x80)\n    /* \"BallotWithStages.sol\":244:254  Stage.Init */\n  0x00\n    /* \"BallotWithStages.sol\":223:254  Stage public stage = Stage.Init */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotWithStages.sol\":455:706  constructor(uint8 _numProposals) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"BallotWithStages.sol\":455:706  constructor(uint8 _numProposals) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_3:\n    /* \"BallotWithStages.sol\":455:706  constructor(uint8 _numProposals) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"BallotWithStages.sol\":519:529  msg.sender */\n  caller\n    /* \"BallotWithStages.sol\":505:516  chairperson */\n  0x00\n  0x01\n    /* \"BallotWithStages.sol\":505:529  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotWithStages.sol\":568:569  2 */\n  0x02\n    /* \"BallotWithStages.sol\":539:545  voters */\n  0x01\n    /* \"BallotWithStages.sol\":539:558  voters[chairperson] */\n  0x00\n    /* \"BallotWithStages.sol\":546:557  chairperson */\n  dup1\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BallotWithStages.sol\":539:558  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BallotWithStages.sol\":539:565  voters[chairperson].weight */\n  0x00\n  add\n    /* \"BallotWithStages.sol\":539:569  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotWithStages.sol\":634:647  _numProposals */\n  dup1\n    /* \"BallotWithStages.sol\":615:647  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"BallotWithStages.sol\":615:624  proposals */\n  0x02\n    /* \"BallotWithStages.sol\":615:647  proposals.length = _numProposals */\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"BallotWithStages.sol\":665:674  Stage.Reg */\n  0x01\n    /* \"BallotWithStages.sol\":657:662  stage */\n  0x00\n  dup1\n    /* \"BallotWithStages.sol\":657:674  stage = Stage.Reg */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  invalid\ntag_8:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotWithStages.sol\":696:699  now */\n  timestamp\n    /* \"BallotWithStages.sol\":684:693  startTime */\n  0x03\n    /* \"BallotWithStages.sol\":684:699  startTime = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotWithStages.sol\":455:706  constructor(uint8 _numProposals) public {... */\n  pop\n    /* \"BallotWithStages.sol\":24:2054  contract Ballot {... */\n  jump(tag_9)\ntag_7:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  dup2\n  dup4\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\ntag_10:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_12:\n  tag_13\n  swap2\n  swap1\ntag_14:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup1\n  dup3\n  add\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_14)\ntag_15:\n  pop\n  swap1\n  jump\ntag_13:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BallotWithStages.sol\":24:2054  contract Ballot {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"BallotWithStages.sol\":24:2054  contract Ballot {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4420e486\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BallotWithStages.sol\":816:1144  function register(address toVoter) public {... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"BallotWithStages.sol\":816:1144  function register(address toVoter) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"BallotWithStages.sol\":1624:2052  function winningProposal() public view returns (uint8 _winningProposal) {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotWithStages.sol\":1204:1618  function vote(uint8 toProposal) public {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"BallotWithStages.sol\":1204:1618  function vote(uint8 toProposal) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"BallotWithStages.sol\":223:254  Stage public stage = Stage.Init */\n    tag_6:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotWithStages.sol\":816:1144  function register(address toVoter) public {... */\n    tag_9:\n        /* \"BallotWithStages.sol\":881:890  Stage.Reg */\n      0x01\n        /* \"BallotWithStages.sol\":872:890  stage != Stage.Reg */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_19\n      jumpi\n      invalid\n    tag_19:\n        /* \"BallotWithStages.sol\":872:877  stage */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotWithStages.sol\":872:890  stage != Stage.Reg */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n      eq\n        /* \"BallotWithStages.sol\":868:901  if (stage != Stage.Reg) {return;} */\n      tag_21\n      jumpi\n        /* \"BallotWithStages.sol\":893:900  return; */\n      jump(tag_18)\n        /* \"BallotWithStages.sol\":868:901  if (stage != Stage.Reg) {return;} */\n    tag_21:\n        /* \"BallotWithStages.sol\":928:939  chairperson */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotWithStages.sol\":914:939  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotWithStages.sol\":914:924  msg.sender */\n      caller\n        /* \"BallotWithStages.sol\":914:939  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BallotWithStages.sol\":914:964  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_22\n      jumpi\n      pop\n        /* \"BallotWithStages.sol\":943:949  voters */\n      0x01\n        /* \"BallotWithStages.sol\":943:958  voters[toVoter] */\n      0x00\n        /* \"BallotWithStages.sol\":950:957  toVoter */\n      dup3\n        /* \"BallotWithStages.sol\":943:958  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotWithStages.sol\":943:964  voters[toVoter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotWithStages.sol\":914:964  msg.sender != chairperson || voters[toVoter].voted */\n    tag_22:\n        /* \"BallotWithStages.sol\":910:973  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_23\n      jumpi\n        /* \"BallotWithStages.sol\":966:973  return; */\n      jump(tag_18)\n        /* \"BallotWithStages.sol\":910:973  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_23:\n        /* \"BallotWithStages.sol\":1007:1008  1 */\n      0x01\n        /* \"BallotWithStages.sol\":982:988  voters */\n      dup1\n        /* \"BallotWithStages.sol\":982:997  voters[toVoter] */\n      0x00\n        /* \"BallotWithStages.sol\":989:996  toVoter */\n      dup4\n        /* \"BallotWithStages.sol\":982:997  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotWithStages.sol\":982:1004  voters[toVoter].weight */\n      0x00\n      add\n        /* \"BallotWithStages.sol\":982:1008  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotWithStages.sol\":1042:1047  false */\n      0x00\n        /* \"BallotWithStages.sol\":1018:1024  voters */\n      0x01\n        /* \"BallotWithStages.sol\":1018:1033  voters[toVoter] */\n      0x00\n        /* \"BallotWithStages.sol\":1025:1032  toVoter */\n      dup4\n        /* \"BallotWithStages.sol\":1018:1033  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotWithStages.sol\":1018:1039  voters[toVoter].voted */\n      0x01\n      add\n      0x00\n        /* \"BallotWithStages.sol\":1018:1047  voters[toVoter].voted = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotWithStages.sol\":1079:1089  10 seconds */\n      0x0a\n        /* \"BallotWithStages.sol\":1068:1077  startTime */\n      sload(0x03)\n        /* \"BallotWithStages.sol\":1068:1089  startTime+ 10 seconds */\n      add\n        /* \"BallotWithStages.sol\":1061:1064  now */\n      timestamp\n        /* \"BallotWithStages.sol\":1061:1090  now > (startTime+ 10 seconds) */\n      gt\n        /* \"BallotWithStages.sol\":1057:1130  if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;} */\n      iszero\n      tag_24\n      jumpi\n        /* \"BallotWithStages.sol\":1101:1111  Stage.Vote */\n      0x02\n        /* \"BallotWithStages.sol\":1093:1098  stage */\n      0x00\n      dup1\n        /* \"BallotWithStages.sol\":1093:1111  stage = Stage.Vote */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_25\n      jumpi\n      invalid\n    tag_25:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotWithStages.sol\":1125:1128  now */\n      timestamp\n        /* \"BallotWithStages.sol\":1113:1122  startTime */\n      0x03\n        /* \"BallotWithStages.sol\":1113:1128  startTime = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotWithStages.sol\":1057:1130  if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;} */\n    tag_24:\n        /* \"BallotWithStages.sol\":816:1144  function register(address toVoter) public {... */\n    tag_18:\n      pop\n      jump\t// out\n        /* \"BallotWithStages.sol\":1624:2052  function winningProposal() public view returns (uint8 _winningProposal) {... */\n    tag_11:\n        /* \"BallotWithStages.sol\":1672:1694  uint8 _winningProposal */\n      0x00\n        /* \"BallotWithStages.sol\":1719:1729  Stage.Done */\n      0x03\n        /* \"BallotWithStages.sol\":1710:1729  stage != Stage.Done */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n        /* \"BallotWithStages.sol\":1710:1715  stage */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotWithStages.sol\":1710:1729  stage != Stage.Done */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n      eq\n        /* \"BallotWithStages.sol\":1706:1757  if (stage != Stage.Done) {return _winningProposal;} */\n      tag_29\n      jumpi\n        /* \"BallotWithStages.sol\":1739:1755  _winningProposal */\n      dup1\n        /* \"BallotWithStages.sol\":1732:1755  return _winningProposal */\n      swap1\n      pop\n      jump(tag_26)\n        /* \"BallotWithStages.sol\":1706:1757  if (stage != Stage.Done) {return _winningProposal;} */\n    tag_29:\n        /* \"BallotWithStages.sol\":1766:1790  uint256 winningVoteCount */\n      0x00\n        /* \"BallotWithStages.sol\":1793:1794  0 */\n      dup1\n        /* \"BallotWithStages.sol\":1766:1794  uint256 winningVoteCount = 0 */\n      swap1\n      pop\n        /* \"BallotWithStages.sol\":1809:1819  uint8 prop */\n      0x00\n        /* \"BallotWithStages.sol\":1822:1823  0 */\n      dup1\n        /* \"BallotWithStages.sol\":1809:1823  uint8 prop = 0 */\n      swap1\n      pop\n        /* \"BallotWithStages.sol\":1804:2038  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n    tag_30:\n        /* \"BallotWithStages.sol\":1832:1841  proposals */\n      0x02\n        /* \"BallotWithStages.sol\":1832:1848  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotWithStages.sol\":1825:1829  prop */\n      dup2\n        /* \"BallotWithStages.sol\":1825:1848  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"BallotWithStages.sol\":1804:2038  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n      iszero\n      tag_31\n      jumpi\n        /* \"BallotWithStages.sol\":1902:1918  winningVoteCount */\n      dup2\n        /* \"BallotWithStages.sol\":1874:1883  proposals */\n      0x02\n        /* \"BallotWithStages.sol\":1884:1888  prop */\n      dup3\n        /* \"BallotWithStages.sol\":1874:1889  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotWithStages.sol\":1874:1899  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotWithStages.sol\":1874:1918  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"BallotWithStages.sol\":1870:2038  if (proposals[prop].voteCount > winningVoteCount) {... */\n      iszero\n      tag_35\n      jumpi\n        /* \"BallotWithStages.sol\":1957:1966  proposals */\n      0x02\n        /* \"BallotWithStages.sol\":1967:1971  prop */\n      dup2\n        /* \"BallotWithStages.sol\":1957:1972  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotWithStages.sol\":1957:1982  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotWithStages.sol\":1938:1982  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"BallotWithStages.sol\":2019:2023  prop */\n      dup1\n        /* \"BallotWithStages.sol\":2000:2023  _winningProposal = prop */\n      swap3\n      pop\n        /* \"BallotWithStages.sol\":1870:2038  if (proposals[prop].voteCount > winningVoteCount) {... */\n    tag_35:\n        /* \"BallotWithStages.sol\":1850:1856  prop++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"BallotWithStages.sol\":1804:2038  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n      jump(tag_30)\n    tag_31:\n      pop\n        /* \"BallotWithStages.sol\":1624:2052  function winningProposal() public view returns (uint8 _winningProposal) {... */\n      pop\n    tag_26:\n      swap1\n      jump\t// out\n        /* \"BallotWithStages.sol\":1204:1618  function vote(uint8 toProposal) public {... */\n    tag_14:\n        /* \"BallotWithStages.sol\":1266:1276  Stage.Vote */\n      0x02\n        /* \"BallotWithStages.sol\":1257:1276  stage != Stage.Vote */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n        /* \"BallotWithStages.sol\":1257:1262  stage */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotWithStages.sol\":1257:1276  stage != Stage.Vote */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n      eq\n        /* \"BallotWithStages.sol\":1253:1287  if (stage != Stage.Vote) {return;} */\n      tag_41\n      jumpi\n        /* \"BallotWithStages.sol\":1279:1286  return; */\n      jump(tag_38)\n        /* \"BallotWithStages.sol\":1253:1287  if (stage != Stage.Vote) {return;} */\n    tag_41:\n        /* \"BallotWithStages.sol\":1296:1316  Voter storage sender */\n      0x00\n        /* \"BallotWithStages.sol\":1319:1325  voters */\n      0x01\n        /* \"BallotWithStages.sol\":1319:1337  voters[msg.sender] */\n      0x00\n        /* \"BallotWithStages.sol\":1326:1336  msg.sender */\n      caller\n        /* \"BallotWithStages.sol\":1319:1337  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotWithStages.sol\":1296:1337  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"BallotWithStages.sol\":1351:1357  sender */\n      dup1\n        /* \"BallotWithStages.sol\":1351:1363  sender.voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotWithStages.sol\":1351:1397  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_42\n      jumpi\n      pop\n        /* \"BallotWithStages.sol\":1381:1390  proposals */\n      0x02\n        /* \"BallotWithStages.sol\":1381:1397  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotWithStages.sol\":1367:1377  toProposal */\n      dup3\n        /* \"BallotWithStages.sol\":1367:1397  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"BallotWithStages.sol\":1351:1397  sender.voted || toProposal >= proposals.length */\n    tag_42:\n        /* \"BallotWithStages.sol\":1347:1406  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_43\n      jumpi\n        /* \"BallotWithStages.sol\":1399:1406  return; */\n      pop\n      jump(tag_38)\n        /* \"BallotWithStages.sol\":1347:1406  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_43:\n        /* \"BallotWithStages.sol\":1430:1434  true */\n      0x01\n        /* \"BallotWithStages.sol\":1415:1421  sender */\n      dup2\n        /* \"BallotWithStages.sol\":1415:1427  sender.voted */\n      0x01\n      add\n      0x00\n        /* \"BallotWithStages.sol\":1415:1434  sender.voted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotWithStages.sol\":1458:1468  toProposal */\n      dup2\n        /* \"BallotWithStages.sol\":1444:1450  sender */\n      dup2\n        /* \"BallotWithStages.sol\":1444:1455  sender.vote */\n      0x01\n      add\n      0x01\n        /* \"BallotWithStages.sol\":1444:1468  sender.vote = toProposal */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotWithStages.sol\":1516:1522  sender */\n      dup1\n        /* \"BallotWithStages.sol\":1516:1529  sender.weight */\n      0x00\n      add\n      sload\n        /* \"BallotWithStages.sol\":1481:1490  proposals */\n      0x02\n        /* \"BallotWithStages.sol\":1491:1501  toProposal */\n      dup4\n        /* \"BallotWithStages.sol\":1481:1502  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotWithStages.sol\":1481:1512  proposals[toProposal].voteCount */\n      0x00\n      add\n      0x00\n        /* \"BallotWithStages.sol\":1481:1529  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotWithStages.sol\":1561:1571  10 seconds */\n      0x0a\n        /* \"BallotWithStages.sol\":1550:1559  startTime */\n      sload(0x03)\n        /* \"BallotWithStages.sol\":1550:1571  startTime+ 10 seconds */\n      add\n        /* \"BallotWithStages.sol\":1543:1546  now */\n      timestamp\n        /* \"BallotWithStages.sol\":1543:1572  now > (startTime+ 10 seconds) */\n      gt\n        /* \"BallotWithStages.sol\":1539:1595  if (now > (startTime+ 10 seconds)) {stage = Stage.Done;} */\n      iszero\n      tag_46\n      jumpi\n        /* \"BallotWithStages.sol\":1583:1593  Stage.Done */\n      0x03\n        /* \"BallotWithStages.sol\":1575:1580  stage */\n      0x00\n      dup1\n        /* \"BallotWithStages.sol\":1575:1593  stage = Stage.Done */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      invalid\n    tag_47:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotWithStages.sol\":1539:1595  if (now > (startTime+ 10 seconds)) {stage = Stage.Done;} */\n    tag_46:\n        /* \"BallotWithStages.sol\":1204:1618  function vote(uint8 toProposal) public {... */\n      pop\n    tag_38:\n      pop\n      jump\t// out\n        /* \"BallotWithStages.sol\":223:254  Stage public stage = Stage.Init */\n    tag_16:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72305820b8bb55713e81ef7ab03ba58a692ae53fb52dde5dfa22fadaf20df2677b297ae964736f6c63430005090032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b506040516106c33803806106c38339818101604052602081101561005657600080fd5b810190808051906020019092919050505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816101229190610153565b5060016000806101000a81548160ff0219169083600381111561014157fe5b021790555042600381905550506101a6565b81548183558181111561017a57818360005260206000209182019101610179919061017f565b5b505050565b6101a391905b8082111561019f5760008082016000905550600101610185565b5090565b90565b61050e806101b56000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634420e48614610051578063609ff1bd14610095578063b3f98adc146100b9578063c040e6b8146100ea575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610116565b005b61009d6102d8565b604051808260ff1660ff16815260200191505060405180910390f35b6100e8600480360360208110156100cf57600080fd5b81019080803560ff169060200190929190505050610384565b005b6100f26104c7565b6040518082600381111561010257fe5b60ff16815260200191505060405180910390f35b6001600381111561012357fe5b6000809054906101000a900460ff16600381111561013d57fe5b14610147576102d5565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101f05750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101fa576102d5565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600a600354014211156102d45760026000806101000a81548160ff021916908360038111156102c757fe5b0217905550426003819055505b5b50565b60006003808111156102e657fe5b6000809054906101000a900460ff16600381111561030057fe5b1461030d57809050610381565b600080905060008090505b6002805490508160ff16101561037e578160028260ff168154811061033957fe5b906000526020600020016000015411156103715760028160ff168154811061035d57fe5b906000526020600020016000015491508092505b8080600101915050610318565b50505b90565b6002600381111561039157fe5b6000809054906101000a900460ff1660038111156103ab57fe5b146103b5576104c4565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061041d57506002805490508260ff1610155b1561042857506104c4565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff168154811061047757fe5b9060005260206000200160000160008282540192505081905550600a600354014211156104c25760036000806101000a81548160ff021916908360038111156104bc57fe5b02179055505b505b50565b6000809054906101000a900460ff168156fea265627a7a72305820b8bb55713e81ef7ab03ba58a692ae53fb52dde5dfa22fadaf20df2677b297ae964736f6c63430005090032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6C3 CODESIZE SUB DUP1 PUSH2 0x6C3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x153 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x141 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x1A6 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x17A JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x17F JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A3 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x185 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x50E DUP1 PUSH2 0x1B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x384 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x102 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x123 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13D JUMPI INVALID JUMPDEST EQ PUSH2 0x147 JUMPI PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1F0 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1FA JUMPI PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C7 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2E6 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x300 JUMPI INVALID JUMPDEST EQ PUSH2 0x30D JUMPI DUP1 SWAP1 POP PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x37E JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x339 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x371 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x35D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x318 JUMP JUMPDEST POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x391 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3AB JUMPI INVALID JUMPDEST EQ PUSH2 0x3B5 JUMPI PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x41D JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x428 JUMPI POP PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x477 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4BC JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xb8 0xbb SSTORE PUSH18 0x3E81EF7AB03BA58A692AE53FB52DDE5DFA22 STATICCALL 0xda CALLCODE 0xd CALLCODE PUSH8 0x7B297AE964736F6C PUSH4 0x43000509 STOP ORIGIN ",
							"sourceMap": "24:2030:0:-;;;244:10;223:31;;;;;;;;;;;;;;;;;;;;;;;;;;455:251;8:9:-1;5:2;;;30:1;27;20:12;5:2;455:251:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;455:251:0;;;;;;;;;;;;;;;;519:10;505:11;;:24;;;;;;;;;;;;;;;;;;568:1;539:6;:19;546:11;;;;;;;;;;;539:19;;;;;;;;;;;;;;;:26;;:30;;;;634:13;615:32;;:9;:32;;;;;:::i;:::-;;665:9;657:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;696:3;684:9;:15;;;;455:251;24:2030;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634420e48614610051578063609ff1bd14610095578063b3f98adc146100b9578063c040e6b8146100ea575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610116565b005b61009d6102d8565b604051808260ff1660ff16815260200191505060405180910390f35b6100e8600480360360208110156100cf57600080fd5b81019080803560ff169060200190929190505050610384565b005b6100f26104c7565b6040518082600381111561010257fe5b60ff16815260200191505060405180910390f35b6001600381111561012357fe5b6000809054906101000a900460ff16600381111561013d57fe5b14610147576102d5565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101f05750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101fa576102d5565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600a600354014211156102d45760026000806101000a81548160ff021916908360038111156102c757fe5b0217905550426003819055505b5b50565b60006003808111156102e657fe5b6000809054906101000a900460ff16600381111561030057fe5b1461030d57809050610381565b600080905060008090505b6002805490508160ff16101561037e578160028260ff168154811061033957fe5b906000526020600020016000015411156103715760028160ff168154811061035d57fe5b906000526020600020016000015491508092505b8080600101915050610318565b50505b90565b6002600381111561039157fe5b6000809054906101000a900460ff1660038111156103ab57fe5b146103b5576104c4565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061041d57506002805490508260ff1610155b1561042857506104c4565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff168154811061047757fe5b9060005260206000200160000160008282540192505081905550600a600354014211156104c25760036000806101000a81548160ff021916908360038111156104bc57fe5b02179055505b505b50565b6000809054906101000a900460ff168156fea265627a7a72305820b8bb55713e81ef7ab03ba58a692ae53fb52dde5dfa22fadaf20df2677b297ae964736f6c63430005090032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x384 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x102 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x123 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13D JUMPI INVALID JUMPDEST EQ PUSH2 0x147 JUMPI PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1F0 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1FA JUMPI PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C7 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2E6 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x300 JUMPI INVALID JUMPDEST EQ PUSH2 0x30D JUMPI DUP1 SWAP1 POP PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x37E JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x339 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x371 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x35D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x318 JUMP JUMPDEST POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x391 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3AB JUMPI INVALID JUMPDEST EQ PUSH2 0x3B5 JUMPI PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x41D JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x428 JUMPI POP PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x477 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4BC JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xb8 0xbb SSTORE PUSH18 0x3E81EF7AB03BA58A692AE53FB52DDE5DFA22 STATICCALL 0xda CALLCODE 0xd CALLCODE PUSH8 0x7B297AE964736F6C PUSH4 0x43000509 STOP ORIGIN ",
							"sourceMap": "24:2030:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;24:2030:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;816:328;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;816:328:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1624:428;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1204:414;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1204:414:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;223:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;816:328;881:9;872:18;;;;;;;;:5;;;;;;;;;;;:18;;;;;;;;;868:33;;893:7;;868:33;928:11;;;;;;;;;;;914:25;;:10;:25;;;;:50;;;;943:6;:15;950:7;943:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;914:50;910:63;;;966:7;;910:63;1007:1;982:6;:15;989:7;982:15;;;;;;;;;;;;;;;:22;;:26;;;;1042:5;1018:6;:15;1025:7;1018:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;1079:10;1068:9;;:21;1061:3;:29;1057:73;;;1101:10;1093:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1125:3;1113:9;:15;;;;1057:73;816:328;;:::o;1624:428::-;1672:22;1719:10;1710:19;;;;;;;;:5;;;;;;;;;;;:19;;;;;;;;;1706:51;;1739:16;1732:23;;;;1706:51;1766:24;1793:1;1766:28;;1809:10;1822:1;1809:14;;1804:234;1832:9;:16;;;;1825:4;:23;;;1804:234;;;1902:16;1874:9;1884:4;1874:15;;;;;;;;;;;;;;;;;:25;;;:44;1870:168;;;1957:9;1967:4;1957:15;;;;;;;;;;;;;;;;;:25;;;1938:44;;2019:4;2000:23;;1870:168;1850:6;;;;;;;1804:234;;;;1624:428;;;:::o;1204:414::-;1266:10;1257:19;;;;;;;;:5;;;;;;;;;;;:19;;;;;;;;;1253:34;;1279:7;;1253:34;1296:20;1319:6;:18;1326:10;1319:18;;;;;;;;;;;;;;;1296:41;;1351:6;:12;;;;;;;;;;;;:46;;;;1381:9;:16;;;;1367:10;:30;;;;1351:46;1347:59;;;1399:7;;;1347:59;1430:4;1415:6;:12;;;:19;;;;;;;;;;;;;;;;;;1458:10;1444:6;:11;;;:24;;;;;;;;;;;;;;;;;;1516:6;:13;;;1481:9;1491:10;1481:21;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1561:10;1550:9;;:21;1543:3;:29;1539:56;;;1583:10;1575:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1539:56;1204:414;;;:::o;223:31::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "258800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "82208",
								"stage()": "517",
								"vote(uint8)": "83022",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "MSTORE"
								},
								{
									"begin": 244,
									"end": 254,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "DUP1"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "EXP"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "DUP2"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "SLOAD"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "DUP2"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "MUL"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "NOT"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "AND"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "SWAP1"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "DUP4"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "DUP2"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "GT"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "ISZERO"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "JUMPI"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "INVALID"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "JUMPDEST"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "MUL"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "OR"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "SWAP1"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "SSTORE"
								},
								{
									"begin": 223,
									"end": 254,
									"name": "POP"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "POP"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "MLOAD"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "PUSHSIZE"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "CODESIZE"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "SUB"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "DUP1"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "PUSHSIZE"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "DUP4"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "CODECOPY"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "DUP2"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "DUP2"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "ADD"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "DUP2"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "ADD"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "SWAP1"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "DUP1"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "DUP1"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "MLOAD"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "SWAP1"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "ADD"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "SWAP1"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "SWAP3"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "SWAP2"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "SWAP1"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "POP"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "POP"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "POP"
								},
								{
									"begin": 519,
									"end": 529,
									"name": "CALLER"
								},
								{
									"begin": 505,
									"end": 516,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 505,
									"end": 516,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "EXP"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "DUP2"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "SLOAD"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "DUP2"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "MUL"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "NOT"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "AND"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "SWAP1"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "DUP4"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "AND"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "MUL"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "OR"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "SWAP1"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "SSTORE"
								},
								{
									"begin": 505,
									"end": 529,
									"name": "POP"
								},
								{
									"begin": 568,
									"end": 569,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 539,
									"end": 545,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "DUP1"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "SWAP1"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "SLOAD"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "SWAP1"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "EXP"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "SWAP1"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "DIV"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 546,
									"end": 557,
									"name": "AND"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "AND"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "AND"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "DUP2"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "MSTORE"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "ADD"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "SWAP1"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "DUP2"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "MSTORE"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "ADD"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 539,
									"end": 558,
									"name": "KECCAK256"
								},
								{
									"begin": 539,
									"end": 565,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 539,
									"end": 565,
									"name": "ADD"
								},
								{
									"begin": 539,
									"end": 569,
									"name": "DUP2"
								},
								{
									"begin": 539,
									"end": 569,
									"name": "SWAP1"
								},
								{
									"begin": 539,
									"end": 569,
									"name": "SSTORE"
								},
								{
									"begin": 539,
									"end": 569,
									"name": "POP"
								},
								{
									"begin": 634,
									"end": 647,
									"name": "DUP1"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "AND"
								},
								{
									"begin": 615,
									"end": 624,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "DUP2"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "SWAP2"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "SWAP1"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "JUMPDEST"
								},
								{
									"begin": 615,
									"end": 647,
									"name": "POP"
								},
								{
									"begin": 665,
									"end": 674,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 657,
									"end": 662,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 657,
									"end": 662,
									"name": "DUP1"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "EXP"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "DUP2"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "SLOAD"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "DUP2"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "MUL"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "NOT"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "AND"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "SWAP1"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "DUP4"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "DUP2"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "GT"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "ISZERO"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "JUMPI"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "INVALID"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "JUMPDEST"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "MUL"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "OR"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "SWAP1"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "SSTORE"
								},
								{
									"begin": 657,
									"end": 674,
									"name": "POP"
								},
								{
									"begin": 696,
									"end": 699,
									"name": "TIMESTAMP"
								},
								{
									"begin": 684,
									"end": 693,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 684,
									"end": 699,
									"name": "DUP2"
								},
								{
									"begin": 684,
									"end": 699,
									"name": "SWAP1"
								},
								{
									"begin": 684,
									"end": 699,
									"name": "SSTORE"
								},
								{
									"begin": 684,
									"end": 699,
									"name": "POP"
								},
								{
									"begin": 455,
									"end": 706,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMP"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP2"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SLOAD"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP2"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP4"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SSTORE"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP2"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP2"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "GT"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "ISZERO"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMPI"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP2"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP4"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "MSTORE"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "KECCAK256"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SWAP2"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP3"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "ADD"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SWAP2"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "ADD"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SWAP2"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SWAP1"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SWAP2"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SWAP1"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP3"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "GT"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "ISZERO"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMPI"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP3"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "ADD"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SWAP1"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SSTORE"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "ADD"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMP"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SWAP1"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMP"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "SWAP1"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "JUMPDEST"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "CODECOPY"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 2054,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72305820b8bb55713e81ef7ab03ba58a692ae53fb52dde5dfa22fadaf20df2677b297ae964736f6c63430005090032",
									".code": [
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "MSTORE"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "POP"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "LT"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "SHR"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 2054,
											"name": "REVERT"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "JUMPDEST"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "DUP1"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "DUP2"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "ADD"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "DUP1"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "DUP1"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "AND"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "ADD"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "SWAP3"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "SWAP2"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "JUMPDEST"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "STOP"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "JUMPDEST"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "JUMPDEST"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "MLOAD"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "DUP1"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "DUP3"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "AND"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "AND"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "DUP2"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "MSTORE"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "ADD"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "SWAP2"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "POP"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "POP"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "MLOAD"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "DUP1"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "SWAP2"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "SUB"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "SWAP1"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "RETURN"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "JUMPDEST"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "DUP1"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "DUP2"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "ADD"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "SWAP1"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "DUP1"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "DUP1"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "AND"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "SWAP1"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "ADD"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "SWAP1"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "SWAP3"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "SWAP2"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "SWAP1"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "JUMPDEST"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "STOP"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "JUMPDEST"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "JUMPDEST"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "DUP3"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "GT"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "ISZERO"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "JUMPI"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "INVALID"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "JUMPDEST"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "AND"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "RETURN"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "JUMPDEST"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "DUP2"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "GT"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "ISZERO"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "JUMPI"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "INVALID"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "JUMPDEST"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "DUP1"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "SLOAD"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "EXP"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "DIV"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 872,
											"end": 877,
											"name": "AND"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "DUP2"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "GT"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "ISZERO"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "JUMPI"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "INVALID"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "JUMPDEST"
										},
										{
											"begin": 872,
											"end": 890,
											"name": "EQ"
										},
										{
											"begin": 868,
											"end": 901,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 868,
											"end": 901,
											"name": "JUMPI"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "JUMP"
										},
										{
											"begin": 868,
											"end": 901,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 868,
											"end": 901,
											"name": "JUMPDEST"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "SLOAD"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "EXP"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "SWAP1"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "DIV"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 939,
											"name": "AND"
										},
										{
											"begin": 914,
											"end": 939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 939,
											"name": "AND"
										},
										{
											"begin": 914,
											"end": 924,
											"name": "CALLER"
										},
										{
											"begin": 914,
											"end": 939,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 914,
											"end": 939,
											"name": "AND"
										},
										{
											"begin": 914,
											"end": 939,
											"name": "EQ"
										},
										{
											"begin": 914,
											"end": 939,
											"name": "ISZERO"
										},
										{
											"begin": 914,
											"end": 964,
											"name": "DUP1"
										},
										{
											"begin": 914,
											"end": 964,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 914,
											"end": 964,
											"name": "JUMPI"
										},
										{
											"begin": 914,
											"end": 964,
											"name": "POP"
										},
										{
											"begin": 943,
											"end": 949,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 950,
											"end": 957,
											"name": "DUP3"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "AND"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "DUP2"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "MSTORE"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "ADD"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "SWAP1"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "DUP2"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "MSTORE"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "ADD"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 943,
											"end": 958,
											"name": "KECCAK256"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "ADD"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "SWAP1"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "SLOAD"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "SWAP1"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "EXP"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "SWAP1"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "DIV"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 943,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 914,
											"end": 964,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 914,
											"end": 964,
											"name": "JUMPDEST"
										},
										{
											"begin": 910,
											"end": 973,
											"name": "ISZERO"
										},
										{
											"begin": 910,
											"end": 973,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 910,
											"end": 973,
											"name": "JUMPI"
										},
										{
											"begin": 966,
											"end": 973,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 966,
											"end": 973,
											"name": "JUMP"
										},
										{
											"begin": 910,
											"end": 973,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 910,
											"end": 973,
											"name": "JUMPDEST"
										},
										{
											"begin": 1007,
											"end": 1008,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DUP1"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP4"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "AND"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "AND"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "DUP2"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "MSTORE"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "ADD"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "SWAP1"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "DUP2"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "MSTORE"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "ADD"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 982,
											"end": 997,
											"name": "KECCAK256"
										},
										{
											"begin": 982,
											"end": 1004,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 982,
											"end": 1004,
											"name": "ADD"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "DUP2"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "SWAP1"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "SSTORE"
										},
										{
											"begin": 982,
											"end": 1008,
											"name": "POP"
										},
										{
											"begin": 1042,
											"end": 1047,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1032,
											"name": "DUP4"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "DUP2"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "MSTORE"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "ADD"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1033,
											"name": "KECCAK256"
										},
										{
											"begin": 1018,
											"end": 1039,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1018,
											"end": 1039,
											"name": "ADD"
										},
										{
											"begin": 1018,
											"end": 1039,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "EXP"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "DUP2"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "SLOAD"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "DUP2"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "MUL"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "NOT"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "AND"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "DUP4"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "ISZERO"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "MUL"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "OR"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "SWAP1"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "SSTORE"
										},
										{
											"begin": 1018,
											"end": 1047,
											"name": "POP"
										},
										{
											"begin": 1079,
											"end": 1089,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1068,
											"end": 1077,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1068,
											"end": 1077,
											"name": "SLOAD"
										},
										{
											"begin": 1068,
											"end": 1089,
											"name": "ADD"
										},
										{
											"begin": 1061,
											"end": 1064,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1061,
											"end": 1090,
											"name": "GT"
										},
										{
											"begin": 1057,
											"end": 1130,
											"name": "ISZERO"
										},
										{
											"begin": 1057,
											"end": 1130,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1057,
											"end": 1130,
											"name": "JUMPI"
										},
										{
											"begin": 1101,
											"end": 1111,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "DUP1"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "EXP"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "SLOAD"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "MUL"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "NOT"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "AND"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "DUP4"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "DUP2"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "GT"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "ISZERO"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "JUMPI"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "INVALID"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "JUMPDEST"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "MUL"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "OR"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "SWAP1"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "SSTORE"
										},
										{
											"begin": 1093,
											"end": 1111,
											"name": "POP"
										},
										{
											"begin": 1125,
											"end": 1128,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1113,
											"end": 1122,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1113,
											"end": 1128,
											"name": "DUP2"
										},
										{
											"begin": 1113,
											"end": 1128,
											"name": "SWAP1"
										},
										{
											"begin": 1113,
											"end": 1128,
											"name": "SSTORE"
										},
										{
											"begin": 1113,
											"end": 1128,
											"name": "POP"
										},
										{
											"begin": 1057,
											"end": 1130,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1057,
											"end": 1130,
											"name": "JUMPDEST"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "JUMPDEST"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 816,
											"end": 1144,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "JUMPDEST"
										},
										{
											"begin": 1672,
											"end": 1694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1729,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "DUP1"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "DUP2"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "GT"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "ISZERO"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "JUMPI"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "INVALID"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "JUMPDEST"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "DUP1"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "SWAP1"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "SLOAD"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "SWAP1"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "EXP"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "SWAP1"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "DIV"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1710,
											"end": 1715,
											"name": "AND"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "DUP2"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "GT"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "ISZERO"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "JUMPI"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "INVALID"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "JUMPDEST"
										},
										{
											"begin": 1710,
											"end": 1729,
											"name": "EQ"
										},
										{
											"begin": 1706,
											"end": 1757,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1706,
											"end": 1757,
											"name": "JUMPI"
										},
										{
											"begin": 1739,
											"end": 1755,
											"name": "DUP1"
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "SWAP1"
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1732,
											"end": 1755,
											"name": "JUMP"
										},
										{
											"begin": 1706,
											"end": 1757,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1706,
											"end": 1757,
											"name": "JUMPDEST"
										},
										{
											"begin": 1766,
											"end": 1790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "DUP1"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1794,
											"name": "POP"
										},
										{
											"begin": 1809,
											"end": 1819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1823,
											"name": "DUP1"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1809,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1804,
											"end": 2038,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1804,
											"end": 2038,
											"name": "JUMPDEST"
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1832,
											"end": 1848,
											"name": "DUP1"
										},
										{
											"begin": 1832,
											"end": 1848,
											"name": "SLOAD"
										},
										{
											"begin": 1832,
											"end": 1848,
											"name": "SWAP1"
										},
										{
											"begin": 1832,
											"end": 1848,
											"name": "POP"
										},
										{
											"begin": 1825,
											"end": 1829,
											"name": "DUP2"
										},
										{
											"begin": 1825,
											"end": 1848,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1825,
											"end": 1848,
											"name": "AND"
										},
										{
											"begin": 1825,
											"end": 1848,
											"name": "LT"
										},
										{
											"begin": 1804,
											"end": 2038,
											"name": "ISZERO"
										},
										{
											"begin": 1804,
											"end": 2038,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1804,
											"end": 2038,
											"name": "JUMPI"
										},
										{
											"begin": 1902,
											"end": 1918,
											"name": "DUP2"
										},
										{
											"begin": 1874,
											"end": 1883,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1884,
											"end": 1888,
											"name": "DUP3"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "AND"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "DUP2"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "SLOAD"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "DUP2"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "LT"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "JUMPI"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "INVALID"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "JUMPDEST"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "SWAP1"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "MSTORE"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "KECCAK256"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "ADD"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "ADD"
										},
										{
											"begin": 1874,
											"end": 1899,
											"name": "SLOAD"
										},
										{
											"begin": 1874,
											"end": 1918,
											"name": "GT"
										},
										{
											"begin": 1870,
											"end": 2038,
											"name": "ISZERO"
										},
										{
											"begin": 1870,
											"end": 2038,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1870,
											"end": 2038,
											"name": "JUMPI"
										},
										{
											"begin": 1957,
											"end": 1966,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1967,
											"end": 1971,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "AND"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "SLOAD"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "DUP2"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "LT"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "JUMPI"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "INVALID"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "JUMPDEST"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "SWAP1"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "MSTORE"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "KECCAK256"
										},
										{
											"begin": 1957,
											"end": 1972,
											"name": "ADD"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "ADD"
										},
										{
											"begin": 1957,
											"end": 1982,
											"name": "SLOAD"
										},
										{
											"begin": 1938,
											"end": 1982,
											"name": "SWAP2"
										},
										{
											"begin": 1938,
											"end": 1982,
											"name": "POP"
										},
										{
											"begin": 2019,
											"end": 2023,
											"name": "DUP1"
										},
										{
											"begin": 2000,
											"end": 2023,
											"name": "SWAP3"
										},
										{
											"begin": 2000,
											"end": 2023,
											"name": "POP"
										},
										{
											"begin": 1870,
											"end": 2038,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1870,
											"end": 2038,
											"name": "JUMPDEST"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "DUP1"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "ADD"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "SWAP2"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "POP"
										},
										{
											"begin": 1850,
											"end": 1856,
											"name": "POP"
										},
										{
											"begin": 1804,
											"end": 2038,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1804,
											"end": 2038,
											"name": "JUMP"
										},
										{
											"begin": 1804,
											"end": 2038,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1804,
											"end": 2038,
											"name": "JUMPDEST"
										},
										{
											"begin": 1804,
											"end": 2038,
											"name": "POP"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "POP"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "JUMPDEST"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "SWAP1"
										},
										{
											"begin": 1624,
											"end": 2052,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "JUMPDEST"
										},
										{
											"begin": 1266,
											"end": 1276,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "DUP2"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "GT"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "ISZERO"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "JUMPI"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "INVALID"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "JUMPDEST"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "DUP1"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "SWAP1"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "SLOAD"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "SWAP1"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "EXP"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "SWAP1"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "DIV"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "AND"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "DUP2"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "GT"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "ISZERO"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "JUMPI"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "INVALID"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "JUMPDEST"
										},
										{
											"begin": 1257,
											"end": 1276,
											"name": "EQ"
										},
										{
											"begin": 1253,
											"end": 1287,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1253,
											"end": 1287,
											"name": "JUMPI"
										},
										{
											"begin": 1279,
											"end": 1286,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1279,
											"end": 1286,
											"name": "JUMP"
										},
										{
											"begin": 1253,
											"end": 1287,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1253,
											"end": 1287,
											"name": "JUMPDEST"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1325,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "CALLER"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "AND"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "AND"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "DUP2"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "MSTORE"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "ADD"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "SWAP1"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "DUP2"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "MSTORE"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "ADD"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "KECCAK256"
										},
										{
											"begin": 1296,
											"end": 1337,
											"name": "SWAP1"
										},
										{
											"begin": 1296,
											"end": 1337,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "SLOAD"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "EXP"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "DIV"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1351,
											"end": 1363,
											"name": "AND"
										},
										{
											"begin": 1351,
											"end": 1397,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1397,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1351,
											"end": 1397,
											"name": "JUMPI"
										},
										{
											"begin": 1351,
											"end": 1397,
											"name": "POP"
										},
										{
											"begin": 1381,
											"end": 1390,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1381,
											"end": 1397,
											"name": "DUP1"
										},
										{
											"begin": 1381,
											"end": 1397,
											"name": "SLOAD"
										},
										{
											"begin": 1381,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1381,
											"end": 1397,
											"name": "POP"
										},
										{
											"begin": 1367,
											"end": 1377,
											"name": "DUP3"
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "AND"
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "LT"
										},
										{
											"begin": 1367,
											"end": 1397,
											"name": "ISZERO"
										},
										{
											"begin": 1351,
											"end": 1397,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1351,
											"end": 1397,
											"name": "JUMPDEST"
										},
										{
											"begin": 1347,
											"end": 1406,
											"name": "ISZERO"
										},
										{
											"begin": 1347,
											"end": 1406,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1347,
											"end": 1406,
											"name": "JUMPI"
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "POP"
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "JUMP"
										},
										{
											"begin": 1347,
											"end": 1406,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1347,
											"end": 1406,
											"name": "JUMPDEST"
										},
										{
											"begin": 1430,
											"end": 1434,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP2"
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "ADD"
										},
										{
											"begin": 1415,
											"end": 1427,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "EXP"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "DUP2"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "SLOAD"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "DUP2"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "MUL"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "NOT"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "AND"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "SWAP1"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "DUP4"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "ISZERO"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "ISZERO"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "MUL"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "OR"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "SWAP1"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "SSTORE"
										},
										{
											"begin": 1415,
											"end": 1434,
											"name": "POP"
										},
										{
											"begin": 1458,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1444,
											"end": 1450,
											"name": "DUP2"
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "ADD"
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "EXP"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "SLOAD"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "DUP2"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "MUL"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "NOT"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "AND"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "SWAP1"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "DUP4"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "AND"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "MUL"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "OR"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "SWAP1"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "SSTORE"
										},
										{
											"begin": 1444,
											"end": 1468,
											"name": "POP"
										},
										{
											"begin": 1516,
											"end": 1522,
											"name": "DUP1"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "ADD"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "SLOAD"
										},
										{
											"begin": 1481,
											"end": 1490,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1491,
											"end": 1501,
											"name": "DUP4"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "AND"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "DUP2"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "SLOAD"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "DUP2"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "LT"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "JUMPI"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "INVALID"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "JUMPDEST"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "SWAP1"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "MSTORE"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "KECCAK256"
										},
										{
											"begin": 1481,
											"end": 1502,
											"name": "ADD"
										},
										{
											"begin": 1481,
											"end": 1512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1512,
											"name": "ADD"
										},
										{
											"begin": 1481,
											"end": 1512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "DUP3"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "DUP3"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "SLOAD"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "ADD"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "SWAP3"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "POP"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "POP"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "DUP2"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "SWAP1"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "SSTORE"
										},
										{
											"begin": 1481,
											"end": 1529,
											"name": "POP"
										},
										{
											"begin": 1561,
											"end": 1571,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "SLOAD"
										},
										{
											"begin": 1550,
											"end": 1571,
											"name": "ADD"
										},
										{
											"begin": 1543,
											"end": 1546,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1543,
											"end": 1572,
											"name": "GT"
										},
										{
											"begin": 1539,
											"end": 1595,
											"name": "ISZERO"
										},
										{
											"begin": 1539,
											"end": 1595,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1539,
											"end": 1595,
											"name": "JUMPI"
										},
										{
											"begin": 1583,
											"end": 1593,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1575,
											"end": 1580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1580,
											"name": "DUP1"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "EXP"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "DUP2"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "SLOAD"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "DUP2"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "MUL"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "NOT"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "AND"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "DUP4"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "DUP2"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "GT"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "ISZERO"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "JUMPI"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "INVALID"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "JUMPDEST"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "MUL"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "OR"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "SWAP1"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "SSTORE"
										},
										{
											"begin": 1575,
											"end": 1593,
											"name": "POP"
										},
										{
											"begin": 1539,
											"end": 1595,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1539,
											"end": 1595,
											"name": "JUMPDEST"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "JUMPDEST"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "POP"
										},
										{
											"begin": 1204,
											"end": 1618,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "JUMPDEST"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "SLOAD"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "EXP"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "DIV"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "AND"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 254,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"stage()": "c040e6b8",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.c68bc34e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"constructor\":\"Create a new ballot with $(_numProposals) different proposals.\",\"register(address)\":{\"notice\":\"Give $(toVoter) the right to vote on this ballot. May only be called by $(chairperson).\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\"}}}},\"settings\":{\"compilationTarget\":{\"BallotWithStages.sol\":\"Ballot\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BallotWithStages.sol\":{\"keccak256\":\"0xb040df448781c8eb037a22230067f782e83f50d14cf7ebf7dcc3bacec4552bb0\",\"urls\":[\"bzzr://e6265b821019ff5ae24218bce2e917f8cf485adb6fe39c46d159de890e26c0ca\",\"dweb:/ipfs/QmV6Cuphhv8BHAPJ9GJ5C1ypsxNVCkfptbr48T8hbKC6D2\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"constructor": "Create a new ballot with $(_numProposals) different proposals.",
							"register(address)": {
								"notice": "Give $(toVoter) the right to vote on this ballot. May only be called by $(chairperson)."
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal)."
							}
						}
					}
				}
			}
		},
		"sources": {
			"BallotWithStages.sol": {
				"ast": {
					"absolutePath": "BallotWithStages.sol",
					"exportedSymbols": {
						"Ballot": [
							231
						]
					},
					"id": 232,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 231,
							"linearizedBaseContracts": [
								231
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "70:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "70:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "91:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "91:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "111:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "111:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 231,
									"src": "47:81:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "159:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "159:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 231,
									"src": "133:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Stage",
									"id": 16,
									"members": [
										{
											"id": 12,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "197:4:0"
										},
										{
											"id": 13,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "202:3:0"
										},
										{
											"id": 14,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "207:4:0"
										},
										{
											"id": 15,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "213:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "185:33:0"
								},
								{
									"constant": false,
									"id": 20,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 231,
									"src": "223:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$16",
										"typeString": "enum Ballot.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 17,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 16,
										"src": "223:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 18,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 16,
											"src": "244:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
												"typeString": "type(enum Ballot.Stage)"
											}
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "244:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 231,
									"src": "265:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "265:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 231,
									"src": "290:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "298:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "290:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 24,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "309:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 231,
									"src": "328:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 27,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "328:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 28,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "328:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 231,
									"src": "360:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 30,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "360:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "495:211:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 36,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "519:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "519:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "505:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "505:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "539:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 43,
															"indexExpression": {
																"argumentTypes": null,
																"id": 42,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "546:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "539:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "539:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "568:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "539:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "539:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 48,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "615:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "615:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 51,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "634:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "615:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "615:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "657:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 55,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "665:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "665:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "657:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "657:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "684:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "696:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "684:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "684:15:0"
											}
										]
									},
									"documentation": "Create a new ballot with $(_numProposals) different proposals.",
									"id": 64,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "467:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 32,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:21:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:0:0"
									},
									"scope": 231,
									"src": "455:251:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "858:286:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 69,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "872:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 70,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "881:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "881:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "872:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 75,
												"nodeType": "IfStatement",
												"src": "868:33:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "892:9:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 68,
															"id": 73,
															"nodeType": "Return",
															"src": "893:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 76,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "914:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "914:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 78,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "928:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "914:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 80,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "943:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 82,
															"indexExpression": {
																"argumentTypes": null,
																"id": 81,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "950:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "943:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "943:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "914:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 86,
												"nodeType": "IfStatement",
												"src": "910:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 68,
													"id": 85,
													"nodeType": "Return",
													"src": "966:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 87,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "982:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 89,
															"indexExpression": {
																"argumentTypes": null,
																"id": 88,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "989:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "982:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "982:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1007:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "982:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "982:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 94,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1018:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 96,
															"indexExpression": {
																"argumentTypes": null,
																"id": 95,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1025:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1018:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1018:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1042:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1018:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1018:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1061:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 102,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1068:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1068:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 105,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1067:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1061:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 117,
												"nodeType": "IfStatement",
												"src": "1057:73:0",
												"trueBody": {
													"id": 116,
													"nodeType": "Block",
													"src": "1092:38:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 107,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1093:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 108,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1101:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Vote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1101:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1093:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 111,
															"nodeType": "ExpressionStatement",
															"src": "1093:18:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 112,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1113:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 113,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "1125:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1113:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 115,
															"nodeType": "ExpressionStatement",
															"src": "1113:15:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Give $(toVoter) the right to vote on this ballot.\n May only be called by $(chairperson).",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "834:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "833:17:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:0:0"
									},
									"scope": 231,
									"src": "816:328:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "1243:375:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1257:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 125,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "1266:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1266:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "1257:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 130,
												"nodeType": "IfStatement",
												"src": "1253:34:0",
												"trueBody": {
													"id": 129,
													"nodeType": "Block",
													"src": "1278:9:0",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 123,
															"id": 128,
															"nodeType": "Return",
															"src": "1279:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 132,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "1296:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 131,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1296:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 137,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 133,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1319:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 136,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 134,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "1326:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1326:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1319:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1296:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 138,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1351:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1351:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 140,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "1367:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 141,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1381:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1381:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1367:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1351:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 146,
												"nodeType": "IfStatement",
												"src": "1347:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 123,
													"id": 145,
													"nodeType": "Return",
													"src": "1399:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 147,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1415:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1415:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1430:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1415:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1415:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 153,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1444:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 156,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "1458:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1444:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 158,
												"nodeType": "ExpressionStatement",
												"src": "1444:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 159,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1481:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 161,
															"indexExpression": {
																"argumentTypes": null,
																"id": 160,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1491:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1481:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1481:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 163,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1516:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1516:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1481:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "1481:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 167,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1543:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 168,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1550:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1561:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1550:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 171,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1549:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1543:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 179,
												"nodeType": "IfStatement",
												"src": "1539:56:0",
												"trueBody": {
													"id": 178,
													"nodeType": "Block",
													"src": "1574:21:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 173,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1575:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 174,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1583:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Done",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1583:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1575:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 177,
															"nodeType": "ExpressionStatement",
															"src": "1575:18:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Give a single vote to proposal $(toProposal).",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1218:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 120,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1217:18:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1243:0:0"
									},
									"scope": 231,
									"src": "1204:414:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "1696:356:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 186,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1710:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 187,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "1719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Done",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1719:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "1710:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 193,
												"nodeType": "IfStatement",
												"src": "1706:51:0",
												"trueBody": {
													"id": 192,
													"nodeType": "Block",
													"src": "1731:26:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 190,
																"name": "_winningProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "1739:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"functionReturnParameters": 185,
															"id": 191,
															"nodeType": "Return",
															"src": "1732:23:0"
														}
													]
												}
											},
											{
												"assignments": [
													195
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 229,
														"src": "1766:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 194,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1766:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 197,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1793:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1766:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 209,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1874:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 211,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 210,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1884:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1874:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 212,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1874:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 213,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "1902:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1874:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 227,
													"nodeType": "IfStatement",
													"src": "1870:168:0",
													"trueBody": {
														"id": 226,
														"nodeType": "Block",
														"src": "1920:118:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 215,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "1938:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 216,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "1957:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 218,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 217,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 199,
																				"src": "1967:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1957:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 219,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "1957:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1938:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 221,
																"nodeType": "ExpressionStatement",
																"src": "1938:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 222,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 184,
																		"src": "2000:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 223,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2019:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2000:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 225,
																"nodeType": "ExpressionStatement",
																"src": "2000:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 202,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1825:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 203,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1832:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1832:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1825:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 228,
												"initializationExpression": {
													"assignments": [
														199
													],
													"declarations": [
														{
															"constant": false,
															"id": 199,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 228,
															"src": "1809:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 198,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1809:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 201,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1822:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1809:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1850:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 206,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1850:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 208,
													"nodeType": "ExpressionStatement",
													"src": "1850:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1804:234:0"
											}
										]
									},
									"documentation": null,
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1648:2:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "1672:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 183,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1671:24:0"
									},
									"scope": 231,
									"src": "1624:428:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 232,
							"src": "24:2030:0"
						}
					],
					"src": "0:2055:0"
				},
				"id": 0
			}
		}
	}
}